name: BSN Backend API Pipeline

on:
  push:
    # if we don't specify the branches, it will be triggered on any branch
    branches:
      - ci/pipeline
    # the workflow get triggered only if the changes exist on these paths
    paths:
      - book-network/** #/** means any file
      - docker/backend/**
      - 'docker-compose.yml'
      - .github/workflows/*-backend.yml

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile Project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # we don't want to check out the sub-branches, we only want to check out the current one

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Compile Project
        run: |
          cd book-network
          ./mvnw clean compile

  unit-tests:
    runs-on: ubuntu-latest
    name: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Running Unit Tests
        run: |
          cd book-network
          ./mvnw clean test

  build:
    runs-on: ubuntu-latest
    name: Build Backend
    needs: [compile, unit-tests] # we need to wait for the previous jobs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build Project
        run: |
          cd book-network
          ./mvnw clean package
      
  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build Project
        run: |
          cd book-network
          ./mvnw clean package

      - name: Extract Project Version
        id: extract_version
        run: |
          cd book-network
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: book-network # if it is the current file => specify .
          file: docker/backend/Dockerfile
          push: true # build the image
          platforms: linux/amd64
          # we are going to be pushing 2 tags
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:latest
          # build args need to be exactly as provided in the Dockerfile
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}s